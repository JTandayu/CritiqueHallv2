import Head from 'next/head'
// import Image from 'next/image'
import styles from "@styles/ForgotPassword.module.css";
import { css, cx } from '@emotion/react'
import { motion } from "framer-motion"
import Home from './home'
import Link from 'next/link'
// import Logo from "@public/critiquehall.png";
import { Heading } from '@chakra-ui/react'
import { Box, Image, Text, Input } from "@chakra-ui/react"
import { Button, ButtonGroup } from "@chakra-ui/react"
import { Stack, HStack, VStack } from "@chakra-ui/react"
import {
  FormControl,
  FormLabel,
  FormErrorMessage,
  FormHelperText,
} from "@chakra-ui/react"
import { useState } from 'react'
import { useColorModeValue } from '@chakra-ui/react';
import { createBreakpoints } from '@chakra-ui/theme-tools'
import { useToast } from '@chakra-ui/react'
import axios from "axios"


const breakpoints = createBreakpoints({
  sm: '320px',
  md: '768px',
  lg: '960px',
  xl: '1200px',
  '2xl': '1536px',
})


const MotionButton = motion(Button)

export default function ForgotPassword(){
  const { API_URL } = process.env
  const { API_KEY } = process.env

  const [email, setEmail] = useState('')
  const toast = useToast()

  const forgotPassword = async () =>{

        let formData = new FormData(); 
        formData.append('email', email);
        
        const config = {
          headers: { 
            'content-type': 'multipart/form-data',
            'X-API-KEY': `${API_KEY}`,
            'Authorization': 'Basic Y2Fwc3RvbmUyMDIxOjEyMzQ=',
            // 'Accept-Encoding': 'gzip, deflate, br',
            'Accept': 'application/json',
          }
        }

        // console.log(email)
  
        axios.post(`${API_URL}/api/forgot_password`, formData, config)
        .then(response => {
            console.log(response);
            // window.location = "/home"
        })
        .catch(error => {
            console.log(error);
            console.log(error.response);
            // window.location = "/forgot-password"
        });
    }

    return(
        <div className={useColorModeValue(styles.container, styles.container2)}>
        <Head>
          <title>Critique Hall | Forgot Password</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href={useColorModeValue('logo256.png', 'logo256-dark.png')} onLoad=""/>
          <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@700&display=swap" rel="stylesheet" />
        </Head>
        
        <Box className={styles.main} bg={useColorModeValue('white', '#212121')} w={{lg: '100ch' , md: '100%' , sm: '100%' }} >
            <center>
            <div className={styles.logo}>
            <Link href="/" passHref><Image src={useColorModeValue('critiquehall.png', 'critiquehall-dark.png')} alt="Critique Hall Logo"/></Link>
            </div>

            <Heading fontFamily={'Raleway'} mb={2} as="h2" size="lg" color={useColorModeValue('#1B1464','#B2A3FF')}>FORGOT PASSWORD</Heading>
            <p className={styles.description}>Kindly enter your iACADEMY Email to receive a link for further process in changing your password.</p>
            <center><FormControl id="forgotpassword" action="/home" isRequired>
                <Input size='lg' width={'40vh'} placeholder="iACADEMY Email" className={styles.input_box} type="email" value={email} onChange={e => setEmail(e.target.value)}/>
                <FormHelperText className={styles.helperText}>This field is required.</FormHelperText>
                <br/>
                {/* <Popover
                placement="bottom"
                closeOnBlur={false}>
                <PopoverTrigger> */}
                <Button
                  // whileHover={{ scale: 1.2 }}
                  // whileTap={{ scale: 0.9 }}
                  className={styles.login_button}
                  bgColor={useColorModeValue('#0C1F83', '#2346FF')}
                  color={useColorModeValue('white', 'white')}
                  _hover={{bgColor: 'blue'}}
                  size="lg"
                  onClick={() =>
                    toast({
                      title: 'Reset Password Link Sent!',
                      description: "We have sent a reset password confirmation to your Email. Check on your primary or spam folder.",
                      status: 'success',
                      duration: 2000,
                      isClosable: true,
                    })
                  }
                  >
                SEND
                </Button>
                {/* </PopoverTrigger>
                <PopoverContent color="white" bg="blue.800" borderColor="blue.800">
                <PopoverArrow />
                <PopoverCloseButton />
                <PopoverHeader pt={4} fontWeight="bold" border="0">Reset Password Link Sent!</PopoverHeader>
                <PopoverBody>We have sent a reset password confirmation to your e-mail.
                  Check on your primary or spam folder.
                </PopoverBody>
                </PopoverContent>
                </Popover> */}
            </FormControl></center>

            <p className={styles.register}>
            <Link href="./login" passHref><Text _hover={{cursor:'pointer'}} fontSize='md' color={useColorModeValue('#1E9CE3', '#1BA3C1')}><a>Back to Login</a></Text></Link>
            </p>
            </center>

        </Box>
        </div>
    )
}